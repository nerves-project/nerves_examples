version: 2.1

elixir_version: &elixir_version
  ELIXIR_VERSION: 1.15.6-otp-26

targets: &targets
  [rpi0, rpi, rpi2, rpi3, rpi3a, rpi4, bbb, osd32mp1, x86_64, grisp2, mangopi_mq_pro]

defaults: &defaults
  working_directory: /nerves/build
  docker:
    - image: ghcr.io/nerves-project/nerves_system_br:1.24.0

context: &context
  context: "org-global"
  filters:
    branches:
      ignore: stats

install_elixir: &install_elixir
  run:
    name: Install Elixir
    command: |
      wget https://repo.hex.pm/builds/elixir/v${ELIXIR_VERSION}.zip
      unzip -d /usr/local/elixir v${ELIXIR_VERSION}.zip
      echo 'export PATH=/usr/local/elixir/bin:$PATH' >> $BASH_ENV

install_hex_rebar: &install_hex_rebar
  run:
    name: Install hex and rebar
    command: |
      cd /tmp
      mix local.hex --force
      mix local.rebar --force

install_nerves_bootstrap: &install_nerves_bootstrap
  run:
    name: Install nerves_bootstrap
    command: |
      cd /tmp
      mix archive.install hex nerves_bootstrap --force

fake_ssh_keys: &fake_ssh_keys
  run:
    name: Generage bogus keys
    command: |
      rm -f ~/.ssh/id_rsa
      ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa

build: &build
  steps:
    - checkout
    - <<: *fake_ssh_keys
    - <<: *install_elixir
    - <<: *install_hex_rebar
    - <<: *install_nerves_bootstrap
    - run:
        name: Build all projects
        command: |
          ./scripts/build-all.sh

jobs:
  build_example:
    <<: *defaults
    parameters:
      target:
        type: string
    environment:
      <<: *elixir_version
      MIX_TARGET: << parameters.target >>
    <<: *build

  automerge:
    docker:
        - image: alpine:3.18.4
    <<: *defaults
    steps:
      - run:
          name: Install GitHub CLI
          command: apk add --no-cache build-base github-cli
      - run:
          name: Attempt PR automerge
          command: |
            author=$(gh pr view "${CIRCLE_PULL_REQUEST}" --json author --jq '.author.login' || true)

            if [ "$author" = "app/dependabot" ]; then
              gh pr merge "${CIRCLE_PULL_REQUEST}" --auto --rebase || echo "Failed trying to set automerge"
            else
              echo "Not a dependabot PR, skipping automerge"
            fi

workflows:
  build_collect:
    jobs:
      - build_example:
          name: << matrix.target >>
          <<: *context
          matrix:
            parameters:
              target: *targets
      - automerge:
          requires: *targets
          context: org-global
          filters:
            branches:
              only: /^dependabot.*/
